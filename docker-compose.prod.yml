services:
  # Node.js Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    expose:
      - '3000'
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    command: node dist/index.js
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/api/v1/ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - healer-network
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: healer-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - healer-network
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Certbot for SSL certificates (run separately for initial setup)
  certbot:
    image: certbot/certbot
    container_name: healer-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - healer-network
    profiles:
      - ssl-setup

networks:
  healer-network:
    driver: bridge

volumes:
  nginx_logs:
